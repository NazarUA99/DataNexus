"""new migration

Revision ID: 0ee57491068a
Revises: 
Create Date: 2024-12-23 17:20:49.716091

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '0ee57491068a'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('client',
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.Column('updated_by', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('contact_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('contact_email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('db_name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('db_name'),
    schema='app'
    )
    op.create_table('dataset',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('datasource_id', sa.Integer(), nullable=False),
    sa.Column('datasource_table', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('datasource_columns', sa.JSON(), nullable=True),
    sa.Column('datasource_primary_key', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='app'
    )
    op.create_table('datasource',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('server', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('serverport', sa.Integer(), nullable=False),
    sa.Column('database', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('directconnect', sa.Boolean(), nullable=False),
    sa.Column('password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='app'
    )
    op.create_table('mapping',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('dataset_id', sa.Integer(), nullable=True),
    sa.Column('dataset_columns', sa.JSON(), nullable=True),
    sa.Column('custom_columns', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['dataset_id'], ['app.dataset.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='app'
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.Column('updated_by', sa.Integer(), nullable=False),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['app.client.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='app'
    )
    op.create_index(op.f('ix_app_user_client_id'), 'user', ['client_id'], unique=False, schema='app')
    op.create_index(op.f('ix_app_user_email'), 'user', ['email'], unique=True, schema='app')
    op.create_index(op.f('ix_app_user_username'), 'user', ['username'], unique=True, schema='app')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_app_user_username'), table_name='user', schema='app')
    op.drop_index(op.f('ix_app_user_email'), table_name='user', schema='app')
    op.drop_index(op.f('ix_app_user_client_id'), table_name='user', schema='app')
    op.drop_table('user', schema='app')
    op.drop_table('mapping', schema='app')
    op.drop_table('datasource', schema='app')
    op.drop_table('dataset', schema='app')
    op.drop_table('client', schema='app')
    # ### end Alembic commands ###
